##reference
# leader = ctrl+space
#
# prefix+r      | reload tmux configuration
##pane
# prefix "      | vertical split
# prefix %      | horizontal split
# ctrl hjkl     | split navigation

# ctrl+d        | to kill current split
# prefix + x    |

#
##window
# ctrl+t        | create window
# shift+up/dw   | window navigation
# prefix+N      | switch to window N
#
##visual mode
# prefix v      | enter visual mode
#               | vim style navigation
# y             | in visual mode yank
# åäö           | navigate halfpage/page up/down
##
# prefix+k      | clear text rigth
# prefix+u      | clear text left
# prefix+l      | clear screen

# to make cygwin work with #{pane_current_path}
set-environment -g CHERE_INVOKING 1

# (ctrl+space) is the prefix
set -g prefix C-Space

# set-window-option : alias(setw)
# set-option -g     : set session global options

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux windows are allways named 0, 1...
set-option -g renumber-windows on

# 256 color support
set -g default-terminal "tmux-256color"
# truecolor support
#https://gist.github.com/XVilka/8346728
set -ga terminal-overrides ',xterm-256color:Tc'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

#
set-option -g xterm-keys on
set -g xterm-keys on
set-window-option -g xterm-keys on

# status bar
set -g status on

if-shell "if [ -e '/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' ] && [ -n ${DISPLAY} ]; then true; else false; fi" \
    'source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf'

if-shell "if [ -e '/usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf' ] && [ -n ${DISPLAY} ]; then true; else false; fi" \
    'source /usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf'

if-shell "if [ $(uname -s) =~ CYGWIN_.* ] || [ -z ${DISPLAY} ]; then true; else false; fi" \
    "set -g status-style 'bg=#373b41,fg=white,bold'; \
    set -g status-left-length 40; \
    set -g status-left '#[fg=yellow,bold,italics]#S § '; \
    set -g status-right '#[fg=white]Week(%V) %Y-%m-%d';\
    set -w -g window-status-current-bg red"

# #[fg=yellow,bold]#T | #[fg=magenta,bg=#373b41]%H:%M

#grey out unfocused split
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# status refresh interval
set -g status-interval 15

# (ctrl+t) to create new window in same directory
bind -n 'C-T' new-window -c "#{pane_current_path}"

# allow us to create new window in copy-mode
bind-key -T copy-mode-vi 'C-T' new-window -c "#{pane_current_path}"

# Split vertical
bind % split-window -h -c "#{pane_current_path}"
# Split horizontal
bind '"' split-window -v -c "#{pane_current_path}"

# shift up/down navigate between windows
bind -n S-Down next-window
bind-key -T copy-mode-vi S-Down next-window
bind -n S-Up previous-window
bind-key -T copy-mode-vi S-Up previous-window

#-------- Copy Mode (Vim Style) {{{
#https://github.com/gotbletu/shownotes/blob/master/tmux_2.4_copy_mode_vim.md
# enable vim copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# enter copy mode (prefix+v)
bind-key v         copy-mode
# TODO ctrl+å to go into visual
# bind-key -t 'C-å'  copy-mode

bind-key P choose-buffer      # select from clipboard history

# in copy mode
bind-key -T copy-mode-vi 'å' send -X page-up
bind-key -T copy-mode-vi 'ä' send -X page-down
bind-key -T copy-mode-vi 'ö' send -X halfpage-down
bind-key -T copy-mode-vi 'Ö' send -X halfpage-up

bind-key -T copy-mode-vi '+' send -X cursor-down
bind-key -T copy-mode-vi '-' send -X cursor-up

bind-key -T copy-mode-vi 'C-Left' send -X previous-word
bind-key -T copy-mode-vi 'C-Right' send -X next-word

# escape will exit vi mode
bind-key -T copy-mode-vi 'Escape' send -X cancel

bind-key -T copy-mode-vi 'v' send -X begin-selection  # visual select
bind-key -T copy-mode-vi 'V' send-keys -X select-line # visual select line

bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle  # toggle between block and line block visual select
bind-key -T choice-mode-vi 'h' send-keys -X tree-collapse     # visual move left?
bind-key -T choice-mode-vi 'l' send-keys -X tree-expand       # visual move right?
bind-key -T choice-mode-vi 'H' send-keys -X tree-collapse-all # visual move to top
bind-key -T choice-mode-vi 'L' send-keys -X tree-expand-all   # visual move to bot

# Clipboard support when a display is detected
if-shell '[[ -n ${DISPLAY} || $(uname -s) =~ CYGWIN_.* ]]' 'source-file ~/.tmux_clipboard.conf'

# enter copy mode on scroll wheel
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

#}}}

# refresh conf (prefix+r)
bind-key r source-file ~/.tmux.conf

# toggle between last pane
bind-key space last-pane

# forward (ctrl+l) using (prefix+l) to clear history
bind l send-keys 'C-l' \; run-shell "sleep .3s" \; clear-history
# forward ctrl+k using (prefix+k)
bind k send-keys 'C-k'
# forward ctrl+u using (prefix+u)
bind u send-keys 'C-u'

# open horizontal pane
bind-key -T prefix ¤ split-window -v -c "#{pane_current_path}"\; resize-pane -y 5

# mouse support
set -g mouse on

# size of history
set -g history-limit 30000

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
# unbind-key -T copy-mode-vi MouseDragEnd1Pane

#override default pane width
set -w -g main-pane-width 85

# Don't wrap searches
set -w -g wrap-search off

set -g set-titles on
set -g set-titles-string '#T'

# List of plugins
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# https://github.com/tmux-plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
