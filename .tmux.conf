##reference
# leader = ctrl+space
#
# prefix+r      | reload tmux configuration
##pane
# prefix "      | vertical split
# prefix %      | horizontal split
# ctrl hjkl     | split navigation

# ctrl+d        | to kill current split
#prefix + x

#
##window
# ctrl+t        | create window
# shift+up/dw   | window navigation
# prefix+N      | switch to window N
#
##visual mode
# prefix v      | enter visual mode
#               | vim style navigation
# y             | in visual mode yank
# åäö           | navigate halfpage/page up/down
##
# prefix+k      | clear text rigth
# prefix+u      | clear text left
# prefix+l      | clear screen


# ctrl+space is the prefix
set -g prefix C-Space
# unbind default ctrl+p prefix
#unbind C-b

# set-window-option alias(setw)

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux windows are allways named 0, 1...
set-option -g renumber-windows on

# 256 color support
set -g default-terminal "tmux-256color" 
set-option -g default-terminal "tmux-256color"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

#
set -g status on

#
set-option -g xterm-keys on
set -g xterm-keys on
set-window-option -g xterm-keys on

#
source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf
# set-option -g default-terminal "screen-256color"

# status refresh interval
set -g status-interval 15

# ctrl+T to create new window
bind -n C-T new-window -c "#{pane_current_path}"
# allow us to create new window in copy-mode
bind-key -T copy-mode-vi C-T new-window -c "#{pane_current_path}"

# Split vertical
bind % split-window -h -c "#{pane_current_path}"
# bind-key -T copy-mode-vi % split-window -v -c "#{pane_current_path}" 
# Split horizontal
bind '"' split-window -v -c "#{pane_current_path}"
# bind-key -T copy-mode-vi " split-window -h -c "#{pane_current_path}" 

# shift up/down navigate between windows
bind -n S-Down next-window
bind-key -T copy-mode-vi S-Down next-window
bind -n S-Up previous-window
bind-key -T copy-mode-vi S-Up previous-window

# 
bind-key    -t vi-copy å page-up
bind-key    -t vi-copy ä page-down
bind-key    -t vi-copy ö halfpage-down
bind-key    -t vi-copy Ö halfpage-up

# # vim like navigation
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# bind-key l select-pane -R

# refresh conf
bind-key r source-file ~/.tmux.conf

# mouse support
set -g mouse on
# sane scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
# size of history
set -g history-limit 30000
#
# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

#override default pane width
set -w -g main-pane-width 85

# toggle between last pane
bind-key space last-pane

# Don't wrap searches
set -w -g wrap-search off

# vim copy mode
setw -g mode-keys vi
set-option -g status-keys vi

# copying selection vim style
# enter vi copy mode
bind-key v         copy-mode
# TODO ctrl+å to go into visual
# bind-key -t 'C-å'     copy-mode

#paste from buffer
bind-key p     paste-buffer

# forward ctrl+l using prefix+l
bind l send-keys 'C-l' \; run-shell "sleep .3s" \; clear-history
# forward ctrl+k using prefix+k
bind k send-keys 'C-k'
# forward ctrl+u using prefix+u
bind u send-keys 'C-u'

# escape will exit vi mode
bind-key -t vi-copy Escape  cancel
# visual select i vi mode
bind-key -t vi-copy 'v' begin-selection

set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# bind-key P     paste-mode# sp
# bind-key -t vi-copy C-Left  previous-word
# bind-key -t vi-copy C-Right next-word

# works by default
# bind-key -T copy-mode-vi 'V' send -X select-line

# bind-key -t vi-copy r       rectangle-toggle

# CYGWIN - install cygutils-extra / putclip.exe & getclip.exe
# Linux  - install xclip
# tmux yank does this for ous
# if-shell '[[ $(uname -s) =~ CYGWIN_.* ]]' \
#   'bind-key -T copy-mode-vi "y" send -X copy-pipe "putclip.exe"' \
#   'bind-key -T copy-mode-vi "y" send -X copy-pipe "xclip -selection clipboard"'

# bind-key p run-shell "tmux set-buffer \"$(cat /dev/clipboard)\"; tmux paste-buffer"
# if-shell '[[ $(uname -s) =~ CYGWIN_.* ]]' \
#   'bind-key p run-shell "tmux set-buffer \"$(cat /dev/clipboard)\"; tmux paste-buffer"' \
#   'bind-key p paste-buffer'

# tmux-yank settings
set -g @shell_mode 'vi'
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'

# List of plugins
# copy to system clipboard not only tmux internal clipboard
# requires xclip OR xsel
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# https://github.com/tmux-plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
