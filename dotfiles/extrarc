# to allow cron jobs to read keyring
touch $HOME/.Xdbus
chmod 600 $HOME/.Xdbus
env | grep DBUS_SESSION_BUS_ADDRESS > $HOME/.Xdbus
echo 'export DBUS_SESSION_BUS_ADDRESS' >> $HOME/.Xdbus

# using terminal emulator xterm with 256 color support
case "$TERM" in
  xterm)TERM=xterm-256color;;
esac

[[ -f ~/.LESS_TERMCAP ]] && . ~/.LESS_TERMCAP

if [[ -e $HOME/bin ]]; then
  PATH=$HOME/bin/:$PATH
fi

CABAL_PACKAGE_BIN=$HOME/.cabal/bin
if [[ -e $CABAL_PACKAGE_BIN ]]; then
  PATH=$CABAL_PACKAGE_BIN:$PATH
fi

if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH
fi
LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib:$LD_LIBRARY_PATH

# CABAL_LIBS=~/.cabal/lib/x86_64-linux-ghc-8.0.2
# if [ -e $CABAL_LIBS ]; then
#   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CABAL_LIBS
# fi

if [ -z "$LIBRARY_PATH" ]; then
  export LIBRARY_PATH
fi
# LIBRARY_PATH=$CABAL_LIBS:$LIBRARY_PATH

SASAL_LIB=/usr/local/lib/sasl2
if [[ -e $SASAL_LIB ]]; then
  LD_LIBRARY_PATH=$SASAL_LIB:$LD_LIBRARY_PATH
fi

TMUX_COMPLETION=/usr/share/doc/tmux/examples/bash_completion_tmux.sh
if [[ -e $TMUX_COMPLETION ]]; then
  source $TMUX_COMPLETION
fi

CABAL_BIN=~/.cabal/bin
if [[ -e $CABAL_BIN ]]; then
  PATH=$CABAL_BIN:$PATH
fi

QUTEBROWSER_BIN=/usr/bin/qutebrowser
if [[ -e $QUTEBROWSER_BIN ]]; then
  export BROWSER=$QUTEBROWSER_BIN
fi

# Enable aliases to be used when sudoing
alias sudo='sudo '

# disable xterm ctrl+S XON XOFF signal for
alias vim="stty stop '' -ixoff; vim "

export EDITOR='vim'
export SYSTEMD_EDITOR='vim'
export VISUAL='vim'

# alias
DOTFILES=$HOME/dotfiles
DOTFILES_LIB=$DOTFILES/lib
DROPBOX=$HOME/Dropbox/root
REF_DIR="$DROPBOX/\[\]ref"
DROPBOX_LINUX=$REF_DIR/linux
DROPBOX_NETWORK=$REF_DIR/network

# device
alias sp-openwrt="vim $REF_DIR/openwrt.md"

# notes
alias sp-books="vim $DROPBOX/books.md"
alias sp-todo="cd ~/Dropbox/term_todo/"
alias sp-interview="cd $DROPBOX/interview"

# misc
alias sp-dropbox="cd $REF_DIR"
alias sp-ref="cd $DROPBOX_LINUX/"
alias sp-win="vim $REF_DIR/win.md"
alias sp-overclock="vim $REF_DIR/overclock.mkd"
alias sp-cygwin="vim $REF_DIR/cygwin.md"

# computer science
alias sp-big-o="vim $REF_DIR/big-o.md"      #TODO
alias sp-np-problem="vim $REF_DIR/np-problem.md"      #TODO
alias sp-bnf="vim $REF_DIR/bnf.md"
alias sp-floating-point="vim $REF_DIR/floating-point.txt" #TODO
alias sp-static-dynamic-typing="vim $REF_DIR/static-dynamic-typing.md" #TODO
alias sp-formal-verification="vim $REF_DIR/formal-verification.md"
alias sp-crdt="vim $REF_DIR/crdt.md"       #TODO
alias sp-turing-complete="vim $REF_DIR/turing-complete.md"       #TODO

# editor
alias sp-eclipse="vim $REF_DIR/eclipse.txt"
alias sp-vim="vim $DROPBOX_LINUX/vim/vim.md"
alias sp-visual="vim $REF_DIR/visual-studio.md"
alias sp-vim-cpp="vim $DROPBOX_LINUX/vim/cpp.md"
alias sp-vim-jump="vim $DROPBOX_LINUX/vim/jump.md"
alias sp-vim-extra="vim $DROPBOX_LINUX/vim/extra.md"

# lang
alias sp-asm="vim $REF_DIR/linux/asm.md" #TODO
alias sp-bash="vim $REF_DIR/linux/bash.md"
alias sp-vimscript="vim $REF_DIR/vimscript.md"

# other
alias sp-tls="vim $REF_DIR/tls2.md"
alias sp-bitcoin="vim $REF_DIR/bitcoin.md"    #TODO
alias sp-markdown="vim $REF_DIR/linux/markdown.md"
alias sp-character="vim -p $REF_DIR/character/*.txt"
alias sp-utf="vim $REF_DIR/character/utf.md" #TODO
alias sp-firefox="vim $REF_DIR/firefox.md"
alias sp-chrome="vim $REF_DIR/chrome.md"
alias sp-zero-sum-game="vim $REF_DIR/zero-sum-game.md" #TODO
alias sp-game-theory="vim $REF_DIR/game-theory.md" #TODO
alias sp-pidgeon-hole="vim $REF_DIR/pidgeon-hole.md" #TODO
alias sp-min-max="vim $REF_DIR/min-max.md" #TODO
alias sp-utc-time="vim $REF_DIR/utc-time.md"
alias sp-sybil-attack="vim $REF_DIR/sybil-attack.md" #TODO
alias sp-byzantine-generals-problem="vim $REF_DIR/byzantine-generals-problem.md" #TODO

# cpp
CPP_ROOT="$DROPBOX/c"
CPP_STUB="$CPP_ROOT/stub"
CPP_EXAMPLE_MAKEFILE=$CPP_ROOT/Makefile
CPP_EXAMPLE_TEST_MAKEFILE=$CPP_ROOT/Makefile_test

alias sp-cinclude="vim $CPP_ROOT/cinclude.md"
alias sp-c="vim $CPP_ROOT/c.md"
alias cpp-gcc="vim $CPP_ROOT/gcc.md"
alias cpp-make="vim $CPP_EXAMPLE_MAKEFILE"
alias cpp-make-test="vim $CPP_EXAMPLE_TEST_MAKEFILE"
alias cpp-elf="vim $CPP_ROOT/elf.md"
alias sp-simd="vim $CPP_ROOT/simd.md"    #TODO
alias cpp-printf="vim $CPP_ROOT/printf.md"
alias cpp-carray="vim $CPP_ROOT/carray.md"
alias cpp-pimpl="vim $CPP_ROOT/pimpl.md"
alias cpp-alignment="vim $CPP_ROOT/alignment.md"
alias cpp-pkg-config="vim $CPP_ROOT/pkg-config.md"   #TODO
alias cpp-linker="vim $CPP_ROOT/linker-debug.md"
alias cpp-lambda="vim $CPP_ROOT/lambda.md"
alias cpp-aliasing="vim $CPP_ROOT/aliasing.md" #TODO
alias cpp-timer="vim $CPP_ROOT/cpp-timer.md"
alias cpp-odr="vim $CPP_ROOT/cpp-odr.md" #TODO

# debug
alias sp-debug="cd $REF_DIR/linux/debug"
alias sp-gdb="vim $DROPBOX_LINUX/debug/gdb.md"
alias sp-perf="vim $DROPBOX_LINUX/debug/perf.md"
alias sp-strace="vim $REF_DIR/linux/debug/strace.md"
alias sp-tcpdump="vim $REF_DIR/linux/debug/tcpdump.md"
alias sp-debug-c="vim $DROPBOX_LINUX/debug/cpp-debug.md"
alias sp-debug-cache="vim $DROPBOX_LINUX/debug/cache.md"
alias sp-debug-hardware="vim $DROPBOX_LINUX/debug/hardware.md"
alias sp-debug-io="vim $DROPBOX_LINUX/debug/io.md"
alias sp-debug-cpu="vim $DROPBOX_LINUX/debug/cpu.md"
alias sp-debug-network="vim $DROPBOX_LINUX/debug/network.md"
alias sp-debug-power="vim $DROPBOX_LINUX/debug/power.md"
alias sp-limits="vim $DROPBOX_LINUX/debug/limits.md"

# Linux utils
alias sp-dd="vim $DROPBOX_LINUX/dd.md"
alias sp-mkdir="vim $REF_DIR/mkdir.md"
alias sp-sed="vim $DROPBOX_LINUX/sed.md"
alias sp-xargs="vim $DROPBOX_LINUX/xargs.md"
alias sp-tr="vim $DROPBOX_LINUX/tr.md"
alias sp-ack="vim $DROPBOX_LINUX/ack.md"
alias sp-ag="vim $DROPBOX_LINUX/ag.md"
alias sp-w3m="vim $DROPBOX_LINUX/w3m.txt"
alias sp-grep="vim $DROPBOX_LINUX/grep.md"
alias sp-awk="vim $DROPBOX_LINUX/awk.md"
alias sp-chmod="vim $DROPBOX_LINUX/chmod.md"
alias sp-date="vim $REF_DIR/linux/date.md"
alias sp-mutt="vim $DROPBOX_LINUX/mutt.txt"
alias sp-pipe="vim $REF_DIR/linux/pipe.txt"
alias sp-tmux="vim $DROPBOX_LINUX/tmux.txt"
alias sp-tunnel="vim $REF_DIR/ssh_tunnel.md"
alias sp-mount="vim $REF_DIR/linux/mount.txt"
alias sp-xclip="vim $DROPBOX_LINUX/xclip.txt"
alias sp-openssl="vim $REF_DIR/sec/openssl.mk"
alias sp-package="vim $DROPBOX_LINUX/install.txt"
alias sp-tar="vim $DROPBOX_LINUX/compression.txt"
alias sp-nice="vim $DROPBOX_LINUX/nice.md"
alias sp-ar="vim $DROPBOX_LINUX/ar.md"
alias sp-ip="vim $DROPBOX_LINUX/ip.md"
alias sp-gnu-parallel="vim $DROPBOX_LINUX/gnu-parallel.md"

# linux
alias sp-linux="cd $DROPBOX_LINUX"
alias sp-i3wm="vim $REF_DIR/i3wm.md"
alias sp-cgroups="vim $REF_DIR/cgroups.md"      #TODO
alias sp-mutex="vim $DROPBOX_LINUX/mutex.md"    #TODO
alias sp-signal="vim $DROPBOX_LINUX/signal.md"
alias sp-systemd="vim $DROPBOX_LINUX/systemd.md"
alias sp-load-average="vim $DROPBOX_LINUX/load-average.md"    #TODO
alias sp-context-switch="vim $DROPBOX_LINUX/context-switch.md"    #TODO
alias sp-directory-structure="vim $DROPBOX_LINUX/directory-structure.md"
alias sp-random="vim $DROPBOX_LINUX/random.md"
alias sp-rcu="vim $DROPBOX_LINUX/rcu.md"    #TODO
alias sp-tty="vim $DROPBOX_LINUX/tty.md"
alias sp-write-to-file="vim $DROPBOX_LINUX/write-to-file.md"

# linux syscall
LINUX_SYSCALL_ROOT=$DROPBOX_LINUX/syscall
alias sp-syscall-mlock="vim $LINUX_SYSCALL_ROOT/mlock.md"   #TODO
alias sp-syscall-readv-writev="vim $LINUX_SYSCALL_ROOT/readv_writev.txt"

# networking
alias sp-network="vim $DROPBOX_NETWORK/linux.md"
alias sp-openvpn="vim $DROPBOX_NETWORK/openvpn.md"
alias sp-dns="vim $DROPBOX_NETWORK/dns.md"    #TODO
alias sp-iptables="vim $DROPBOX_NETWORK/iptables.md"    #TODO

#audio
alias sp-audio="vim $REF_DIR/audio.txt"       #TODO

#concurrency
alias sp-numa="vim $DROPBOX_LINUX/numa.md"    #TODO
alias sp-sc="vim $DROPBOX_LINUX/sequential_consistency.md"
alias sp-oOo="vim $REF_DIR/1out-of-order.md"
alias sp-concurreny-jvm="vim $REF_DIR/concurrency-jvm.txt"
alias sp-concurrent-design="vim $REF_DIR/concurrent-design.txt"
alias sp-dma="vim $REF_DIR/dma.md"    #TODO
alias sp-cpu="vim $REF_DIR/cpu.txt"    #TODO
alias sp-MESI="vim $REF_DIR/MESI.txt"    #TODO
alias sp-serializability-linearizability="vim $REF_DIR/concurrency/serializability-linearizability.md" #TODO
alias sp-linearizability-serializability="sp-serializability-linearizability"

# memory
alias sp-memory="vim -p $REF_DIR/memory/*"   #TODO

# type-theory
alias sp-type-theory="vim -p $REF_DIR/*type*.txt $REF_DIR/variance.txt"   #TODO

# tree
DATA_STRUCTURE_ROOT=$REF_DIR/data-structure
alias sp-tree-btree="vim $DATA_STRUCTURE_ROOT/tree-btree.md"   #TODO
alias sp-tree-merkle-tree="vim $DATA_STRUCTURE_ROOT/tree-merkle-tree.md"   #TODO

# data structures
alias sp-bloom-filter="vim $DATA_STRUCTURE_ROOT/bloom-filter.md" #TODO
alias sp-monad="vim $DATA_STRUCTURE_ROOT/monad.txt" #TODO

# distributed
alias sp-acid="vim $REF_DIR/acid.md"   #TODO
alias sp-cap="vim $REF_DIR/cap.md"    #TODO
alias sp-paxos="vim $REF_DIR/paxos-consensus.md"    #TODO
alias sp-raft="vim $REF_DIR/raft-consensus.md"    #TODO
alias sp-dht="vim $REF_DIR/dht.md" #TODO

#
alias sp-neural-network="vim $REF_DIR/neural-network.md"  #TODO
alias sp-machine-learning="vim $REF_DIR/machine-learing.md" #TODO

# Work
alias sp-util="vim $REF_DIR/util.md"
alias sp-compuverdeutil="vim $REF_DIR/util.md"

# Project
alias sp-proj="cd $DROPBOX/project"
alias sp-proj-malloc="vim $DROPBOX/project/malloc.md"

# nas540
alias nas540="sshfs admin@192.168.1.12:/i-data/ $HOME/mount/nas540"
alias nas540_dl="cd $HOME/mount/nas540/0da29454/admin/download/Transmission/download"


# ===============================================
# ===============================================
# =_______________COMMANDS______________________=
# ===============================================

#cygwin
# which sudo > /dev/null 2>&1
# WHICH_SUDO=$?
# hash sudo > /dev/null 2>&1
# HASH_SUDO=$?
#
# if [ $WHICH_SUDO -eq $HASH_SUDO ]; then
#   if [ ! $WHICH_SUDO -eq 0 ]; then
#     alias sudo=$HOME/dotfiles/sudo
#   fi
# fi

#git
alias gitcommit="git commit"
alias "cd-"="cd -"
alias gitst="git st"
alias gitadd="git add"

#khal
alias sp-khal='khal calendar -a red -a personal --format="{red-bold}{start-time}{reset}-{green-bold}{end-time}{reset} {calendar-color}{title}{reset}{yellow}{repeat-symbol}{reset} [{cyan}{location}{reset}][{magenta}{calendar}{reset}]"'
alias k="sp-khal"
alias m="ms"

#mutt
alias ms="mutt -F $HOME/.mutt/user_personal"
alias mf="mutt -F $HOME/.mutt/user2_personal"
alias mw="mutt -F $HOME/.mutt/user_work"

function sp_newsbeuter() {
  which newsbeuter 2>&1 > /dev/null
  if [ $? -eq 0 ]; then
    newsbeuter
  else
    newsboat
  fi

}
alias n="sp_newsbeuter"
alias duh="du -h -d 0 [^.]*"

#force ssh to use xterm when ssh instead of tmux-colour256
alias ssh='TERM=xterm ssh '

alias sp-sync="$DOTFILES_LIB/mail_sync.sh"

function sp_port_scan() {

  which netstat 2>&1 > /dev/null
  if [ $? -eq 0 ]; then
    netstat -alnptu | grep -Ei 'Proto|LISTEN'
  else
    ss --all --listen --processes --tcp --udp --raw | grep -Ei 'Proto|LISTEN'
  fi
}
alias port-scan='sp_port_scan'

alias sp-open="$DOTFILES_LIB/keypass_cron.sh; $DOTFILES_LIB/open_keyring.py"
alias sp-space="du -hsc *"
alias sp-root="cd \`$DOTFILES_LIB/git_root.sh\`"

#tmux
# force the 256 colors compatibility
alias tmux='tmux -2'
alias sp-source='tmux source-file ~/.tmux.conf; powerline-daemon --replace'

# meta alias
alias sp-alias="vim $DOTFILES/extrarc && source $DOTFILES/extrarc"
alias sp-vimrc="vim -p $HOME/.vimrc $HOME/.standardvimrc"

#repeats $1
alias sp_repeat="~/dotfiles/lib/repeat.sh"
# alias sp_repeat_i="~/dotfiles/lib/repeati.sh"

function mkdir_cd(){
  if [ ! -e $1 ]; then
    mkdir -p $1
  fi
  cd $1
}

alias mcd="mkdir_cd"

SCRATCHPAD_ROOT=$HOME/scratchpad
function codi(){
  local CODI_FILE="$SCRATCHPAD_ROOT/calc_`date +'%Y_%m_%d'`.py"
  if [ ! -e $CODI_FILE ]; then
    cp $SCRATCHPAD_ROOT/calc_template $CODI_FILE
  fi

  vim $CODI_FILE -c "
    hi ColorColumn ctermbg=NONE
    hi VertSplit ctermbg=NONE
    hi NonText ctermfg=0
    Codi python $@"
}

alias sp-calc="cd $SCRATCHPAD_ROOT"
alias sp_calc="codi"

# ===============================================
# ===============================================
# =____________DEVELOPMENT______________________=
# ===============================================
alias cpp_extends="$HOME/dotfiles/lib/cpp_extends.sh"
alias cpp_grep="$HOME/dotfiles/lib/cpp_grep.sh"
alias cpp_funcall="$HOME/dotfiles/lib/cpp_function_call.sh"
alias cpp_fundeclare="$HOME/dotfiles/lib/cpp_function_declare.sh"
alias cpp_conscall="$HOME/dotfiles/lib/cpp_constructor_call.sh"

alias sp_gdb="$HOME/dotfiles/lib/gdb_tmux_dashboard.sh"

function setup_ycm(){
  if [[ -e CMakeLists.txt ]]; then
    $HOME/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format ycm
    $HOME/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format cc
  fi
  if [[ -e Makefile ]]; then
    $HOME/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format ycm
    $HOME/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format cc
  fi
  # since it looks like they are time same file?
  cp .color_coded .clang_complete
}

function setup_meta(){
  if [ ! -e .git ]; then
    echo 'project root is required to be git:ed'
  else
    #
    if [ -e .tags ]; then
      rm .tags
    fi
    touch .tags
    ctags -R *

    # ack-grep -f --cpp > cscope.files
    # cscope -b -q -k

    gtags
    make bear

    setup_ycm
    DIRS=( "test" )
    for current in "${DIRS[@]}"; do
      if [ -e $current ]; then
        cd $current
        setup_ycm
        cd -
      fi
    done
  fi
}

function setup_project(){
  # if clean slate
  if [ ! "$(ls -A ${PWD})" ]; then
    git init

    TEST_DIRECTORY="test"
    EXTERNAL_DIRECTORY="external"
    DIRECTORIES=($TEST_DIRECTORY $EXTERNAL_DIRECTORY ".")
    for DIR in "${DIRECTORIES[@]}"
    do
      if [ ! -e $DIR ]; then
        mkdir $DIR
      fi
      touch $DIR/README.md
    done

    cp $CPP_EXAMPLE_MAKEFILE .
    cp $CPP_EXAMPLE_TEST_MAKEFILE $TEST_DIRECTORY/Makefile
    cp "$CPP_STUB/.gitignore" .
    cp "$CPP_STUB/app.h" .
    cp "$CPP_STUB/app.cpp" .
    cp "$CPP_STUB/main.cpp" .
    cp "$CPP_STUB/AppTest.cpp" $TEST_DIRECTORY

    cd $EXTERNAL_DIRECTORY
    git submodule add https://github.com/google/googletest.git
    cd -

    git add .
    git commit -m "Initial Commit"
  fi
  setup_meta
}
alias sp_setup_make_project='setup_project'

function makex() {
  pathpat="(/[^/]*)+:[0-9]+"
  ccred=$(echo -e "\033[0;31m")
  ccyellow=$(echo -e "\033[0;33m")
  ccend=$(echo -e "\033[0m")

  make "$@" 2>&1 | sed -E -e "/[Ee]rror[: ]/ s%$pathpat%$ccred&$ccend%g" -e "/[Ww]arning[: ]/ s%$pathpat%$ccyellow&$ccend%g"

  return ${PIPESTATUS[0]}
}

function spperf_report(){
  perf report -n --stdio
}

function spperf(){
  perf record -F 990 $@
  spperf_report
}

alias makex="makex | less -RiN -p error"
# watch files system forchangess and reload
alias make_loop="ack --cpp -f | entr $HOME/dotfiles/lib/entr_make.sh"
alias test_loop="ack --cpp -f | entr $HOME/dotfiles/lib/entr_make_test.sh"

alias sp_perf="spperf $@"
alias sp_perf_report="spperf_report"

# vim: set ft=sh:
