# to allow cron jobs to read keyring
touch $HOME/.Xdbus
chmod 600 $HOME/.Xdbus
env | grep DBUS_SESSION_BUS_ADDRESS > $HOME/.Xdbus
echo 'export DBUS_SESSION_BUS_ADDRESS' >> $HOME/.Xdbus

# using terminal emulator xterm with 256 color support
case "$TERM" in
  xterm)TERM=xterm-256color;;
esac

# git ps line
if [[ -e ~/.git-prompt.sh ]]; then
  source ~/.git-prompt.sh
fi

#
[[ -f ~/.LESS_TERMCAP ]] && . ~/.LESS_TERMCAP

if [[ -e $HOME/bin ]]; then
  PATH=$HOME/bin/:$PATH
fi

export LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib

SASAL_LIB=/usr/local/lib/sasl2
if [[ -e $SASAL_LIB ]]; then
  LD_LIBRARY_PATH=$SASAL_LIB:$LD_LIBRARY_PATH
fi

TMUX_COMPLETION=/usr/share/doc/tmux/examples/bash_completion_tmux.sh
if [[ -e $TMUX_COMPLETION ]]; then
  source $TMUX_COMPLETION
fi

CABAL_BIN=~/.cabal/bin
if [[ -e $CABAL_BIN ]]; then
  PATH=$CABAL_BIN:$PATH
fi

QUTEBROWSER_BIN=/usr/bin/qutebrowser
if [[ -e $QUTEBROWSER_BIN ]]; then
  export BROWSER=$QUTEBROWSER_BIN
fi

export EDITOR='vim'
export VISUAL='vim'

alias cd-="cd -"
alias gitst="git st"
alias gitadd="git add"
# alias
DOTFILES=$HOME/dotfiles
DOTFILES_LIB=$DOTFILES/lib
DROPBOX=$HOME/Dropbox/root
REF_DIR="$DROPBOX/\[\]ref"
DROPBOX_LINUX=$REF_DIR/linux
DROPBOX_NETWORK=$REF_DIR/network

alias sp-khal='khal calendar -a red -a personal --format="{red-bold}{start-time}{reset}-{green-bold}{end-time}{reset} {calendar-color}{title}{reset}{yellow}{repeat-symbol}{reset} [{cyan}{location}{reset}][{magenta}{calendar}{reset}]"'
alias k="sp-khal"
alias m="ms"
alias ms="mutt -F $HOME/.mutt/user_personal"
alias mf="mutt -F $HOME/.mutt/user2_personal"
alias mw="mutt -F $HOME/.mutt/user_work"

alias n="newsbeuter"
alias duh="du -h -d 0 [^.]*"

alias sp-sync='$DOTFILES_LIB/keypass_cron.sh; $DOTFILES_LIB/offlineimap_cron.sh; $DOTFILES_LIB/vdirsyncer_cron.sh'
alias port-scan='netstat -alnptu | egrep '\''Proto|LISTEN'\'''

alias sp-open="$DOTFILES_LIB/keypass_cron.sh; $DOTFILES_LIB/open_keyring.py"
alias sp-space="du -hsc *"
alias sp-root="cd \`$DOTFILES_LIB/git_root.sh\`"
#tmux
# force the 256 colors compatibility
alias tmux='tmux -2'
alias sp-source='tmux source-file ~/.tmux.conf; powerline-daemon --replace'
# meta alias
alias sp-alias="vim $DOTFILES/extrarc && source $DOTFILES/extrarc"
alias sp-vimrc="vim ~/.vimrc"
# dropbox
alias sp-tmux="vim $DROPBOX_LINUX/tmux.txt"
alias sp-vim="vim $DROPBOX_LINUX/vim.txt"
alias sp-vim-cpp="vim $DROPBOX_LINUX/vim/cpp"
alias sp-vim-extra="vim $DROPBOX_LINUX/vim/extra"
alias sp-vim-jump="vim $DROPBOX_LINUX/vim/jump.md"
alias sp-xclip="vim $DROPBOX_LINUX/xclip.txt"
alias sp-gdb="vim $DROPBOX_LINUX/debug/gdb.md"
alias sp-perf="vim $DROPBOX_LINUX/debug/perf.txt"
alias sp-ref="cd $DROPBOX_LINUX/"
alias sp-todo="cd ~/Dropbox/term_todo/"
alias sp-systemd="vim $DROPBOX_LINUX/systemd.md"
alias sp-gcc="vim ~/Dropbox/root/[]ref/c/gcc.md"
alias sp-linker="vim $DROPBOX_LINUX/debug/linker-debug.md"
alias sp-cdebug="vim $DROPBOX_LINUX/debug/cpp-debug.md"
alias sp-sed="vim $DROPBOX_LINUX/sed.md"
alias sp-ack="vim $DROPBOX_LINUX/ack.md"
alias sp-linux="cd $DROPBOX_LINUX"
alias sp-tar="vim $DROPBOX_LINUX/compression.txt"
alias sp-package="vim $DROPBOX_LINUX/install.txt"
alias sp-mutt="vim $DROPBOX_LINUX/mutt.txt"
alias sp-w3m="vim $DROPBOX_LINUX/w3m.txt"
alias sp-interview="cd $DROPBOX/interview"
alias sp-grep="vim $DROPBOX_LINUX/grep.md"
alias sp-signal="vim $DROPBOX_LINUX/signal.md"
alias sp-sc="vim $DROPBOX_LINUX/sequential_consistency.md"
alias sp-win="vim $REF_DIR/win.md"
alias sp-i3wm="vim $REF_DIR/i3wm.md"
alias sp-openssl="vim $REF_DIR/sec/openssl.mk"
alias sp-openwrt="vim $REF_DIR/openwrt.md"
alias sp-network="vim $DROPBOX_NETWORK/linux.md"
alias sp-visual="vim $REF_DIR/visual-studio.md"
alias sp-proj="cd $DROPBOX/project"
alias sp-printf="vim $REF_DIR/c/printf.md"
alias sp-make="vim $REF_DIR/c/Makefile"
# ===============================================
# ===============================================
# =____________DEVELOPMENT______________________=
# ===============================================
# ===============================================
alias cpp-extends="$HOME/dotfiles/lib/cpp_extends.sh"
alias cpp-grep="$HOME/dotfiles/lib/cpp_grep.sh"
alias cpp-funcall="$HOME/dotfiles/lib/cpp_function_call.sh"
alias cpp-fundeclare="$HOME/dotfiles/lib/cpp_function_declare.sh"
function setup_project(){
  if [ ! -e .git ];then
    echo 'project root is required to be git:ed'
    exit 1
  fi
#
  rm .tags
  touch .tags
  ctags -R *
#
  # ack-grep -f --cpp > cscope.files
  # cscope -b -q -k
#
  gtags
#
  #-c g++ -F ycm -F cc
  if [[ -e CMakeLists.txt ]]; then
    ~/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format ycm
    ~/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format cc
  fi
  if [[ -e Makefile ]]; then
    ~/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format ycm
    ~/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format cc
  fi
}
alias sp-setup='setup_project'

function makex() {
  pathpat="(/[^/]*)+:[0-9]+"
  ccred=$(echo -e "\033[0;31m")
  ccyellow=$(echo -e "\033[0;33m")
  ccend=$(echo -e "\033[0m")
  /usr/bin/make "$@" 2>&1 | sed -E -e "/[Ee]rror[: ]/ s%$pathpat%$ccred&$ccend%g" -e "/[Ww]arning[: ]/ s%$pathpat%$ccyellow&$ccend%g"
  return ${PIPESTATUS[0]}
}
alias makex="makex | less -RiN -p error"

# vim: set ft=sh:
