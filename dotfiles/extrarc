# to allow cron jobs to read keyring
function sp_setup_dbus() {
  local X_dbus=$HOME/.Xdbus
  if [ ! -e $X_dbus ]; then
    touch $X_dbus
    chmod 600 $X_dbus
  fi
  local SP_ENV="`env | grep DBUS_SESSION_BUS_ADDRESS`"
  if [[ $? -eq 0 ]]; then
    if [[ ! -z $SP_ENV ]]; then
      echo "$SP_ENV" > $X_dbus
      echo 'export DBUS_SESSION_BUS_ADDRESS' >> $X_dbus
    fi
  fi
}

# alias
alias ll="ls -alh --color=tty"

alias duh="du -h -d 0 [^.]* | sort -hr"

alias lcd="cd"
alias lvim="vim"
alias ltree="tree"
alias lrm="rm"
alias lgit="git"
alias lcat="cat"
alias lmv="mv"
alias lcp="cp"
alias l="ll"

alias gitcommit="git commit"
alias "cd-"="cd -"
alias gitst="git st"
alias gitadd="git add"

function htops() {
  TERM=xterm htop -p $(pidof "$1" | tr ' ' ',')
}
alias htop=" TERM=xterm htop"

#
DOTFILES=$HOME/dotfiles
DOTFILES_LIB=$DOTFILES/lib
DROPBOX_AXIS=$HOME/Dropbox/axis
DROPBOX=$HOME/Dropbox/root
REF_DIR="$DROPBOX/\[\]ref"
DROPBOX_LINUX=$REF_DIR/linux
DROPBOX_NETWORK=$REF_DIR/network

alias sp-open="sp_setup_dbus; $DOTFILES_LIB/keypass_cron.sh; $DOTFILES_LIB/open_keyring.py"


# using terminal emulator xterm with 256 color support
case "$TERM" in
  xterm)TERM=xterm-256color;;
esac

[[ -f ~/.LESS_TERMCAP ]] && . ~/.LESS_TERMCAP

if [[ -e $HOME/bin ]]; then
  PATH=$HOME/bin:$PATH
fi

CABAL_PACKAGE_BIN=$HOME/.cabal/bin
if [[ -e $CABAL_PACKAGE_BIN ]]; then
  PATH=$CABAL_PACKAGE_BIN:$PATH
fi

if [[ ! -z NUMBER_OF_PROCESSORS ]]; then
  export NUMBER_OF_PROCESSORS=$(nproc --all)
fi

if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH
fi
# LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib:$LD_LIBRARY_PATH

# CABAL_LIBS=~/.cabal/lib/x86_64-linux-ghc-8.0.2
# if [ -e $CABAL_LIBS ]; then
#   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CABAL_LIBS
# fi

if [ -z "$LIBRARY_PATH" ]; then
  export LIBRARY_PATH
fi
# LIBRARY_PATH=$CABAL_LIBS:$LIBRARY_PATH

TMUX_COMPLETION=/usr/share/doc/tmux/examples/bash_completion_tmux.sh
if [[ -e $TMUX_COMPLETION ]]; then
  source $TMUX_COMPLETION
fi

CABAL_BIN=~/.cabal/bin
if [[ -e $CABAL_BIN ]]; then
  PATH=$CABAL_BIN:$PATH
fi

GEM_BIN=$HOME/.gem/ruby/2.5.0/bin
if [[ -e $GEM_BIN ]]; then
  PATH=$GEM_BIN:$PATH
fi

SP_PIP_BIN=$HOME/.local/bin
if [[ -e $SP_PIP_BIN ]]; then
  PATH=$SP_PIP_BIN:$PATH
fi

# Enable aliases to be used when sudoing
alias sudo='sudo '

# disable xterm ctrl+S XON XOFF signal
alias vim="stty stop '' -ixoff; vim -p "
alias vimnoplugin=" vim -u ~/.standardvimrc"
alias vimp="vim -"

export EDITOR='vim'
export SYSTEMD_EDITOR='vim'
export VISUAL='vim'

# device
alias sp-openwrt="vim $REF_DIR/openwrt.md"

#programming
alias sp-naming="vim $REF_DIR/naming-things.md"

# notes
alias sp-books="vim $DROPBOX/books.md"
alias sp-todo="vim $DROPBOX/note/todo.md"
alias sp_todo="cd ~/Dropbox/term_todo/"
alias sp-todo-dev="vim ~/Dropbox/term_todo/dev.md"
alias sp-interview="cd $DROPBOX/interview"
alias sp-razor="vim $REF_DIR/razor.md"
alias sp-occams-razor="sp-razor"
alias sp-hanlon-razor="sp-razor"
alias sp-murphys-law="sp-razor"
alias sp-dunningâ€“kruger="sp-razor"
alias sp-conways="sp-razor"
alias sp-zeroday="vim $REF_DIR/zeroday.md"
alias sp-taxonomy="vim $REF_DIR/taxonomy.md"
alias sp-zero-sum-game="vim $REF_DIR/zero-sum-game.md" #TODO
alias sp-game-theory="vim $REF_DIR/game-theory.md" #TODO
alias sp-min-max="vim $REF_DIR/min-max.md" #TODO
alias sp-pidgeon-hole="vim $REF_DIR/pidgeon-hole.md"
alias sp-birthday-paradox="vim $REF_DIR/birthday-paradox.md"
alias sp-docker="vim $REF_DIR/docker.md"

alias sp-gerrit="vim $REF_DIR/gerrit.md"


function sp_cpu_alias() {
  local isa="$REF_DIR/ISA.md"
  local microarchitecture="$REF_DIR/microarchitecture.md"
  local risc="$REF_DIR/risc.md"
  local cisc="$REF_DIR/cisc.md"
  local opcode="$REF_DIR/opcode.md"
  local file_cpu="$REF_DIR/cpu.md"
  local machine_code="$REF_DIR/machine_code.md"

  local microcontroller="$REF_DIR/microcontroller.md"

  local alu="$REF_DIR/cpu-alu.md" # TODO
  local prefetch="$REF_DIR/cpu-prefetch.md" # TODO
  local mmu="$REF_DIR/mmu.md" # TODO

  local asm="$REF_DIR/linux/asm.md"
  local asm_att="$REF_DIR/linux/asm_att.md"
  local asm_intel="$REF_DIR/linux/asm_intel.md"
  local asm_nasm="$REF_DIR/linux/asm_nasm.md"
  local word_size="$REF_DIR/linux/word-size.md"
  local asm_make="$REF_DIR/linux/asm_nasm_Makefile.md"

  local dma="$REF_DIR/dma.md"

  local file_rtc="$REF_DIR/rtc.md"

  # CPU
  alias sp-cpu="vim -p ${file_cpu} ${isa} ${microarchitecture} ${risc} ${cisc} ${opcode} ${machine_code} ${asm} ${dma}"
  alias sp-smp="vim -p ${file_cpu}"
  alias sp-smt="sp-smp"

  alias sp-microprocessor="sp-cpu"
  alias sp-ISA="vim ${isa}"
  alias sp-isa="sp-ISA"
  alias sp-microarchitecture="vim ${microarchitecture}"
  alias sp-risc="vim ${risc}"
  alias sp-cisc="vim ${cisc}"
  alias sp-opcode="vim ${opcode}"
  alias sp-machine-code="vim ${machine_code}"

  alias sp-rtc="vim ${file_rtc}"

  alias sp-microcontroller="vim -p ${microcontroller}"

  alias sp-alu="vim -p $alu"
  alias sp-prefetch="vim -p $prefetch"
  alias sp-mmu-cpu="vim -p $mmu"

  alias sp-asm="vim -p ${asm} ${asm_att} ${asm_intel} ${asm_nasm} ${word_size} ${asm_make}"
  alias sp-asm-make="vim -p ${asm_make}"
  alias sp-simd="vim $CPP_ROOT/simd.md"    #TODO
  alias sp-word-size="vim -p ${word_size}"

  alias sp-dma="vim ${dma}"    #TODO

  #
}

sp_cpu_alias

alias sp-interrupt="vim -p $REF_DIR/interrupt.md"

function sp_memory_alias() {
  local io_mmu="$REF_DIR/memory/io-mmu.md"

  local virtual_memory="$REF_DIR/memory/virtual-memory.md"
  local cpu_cache="$REF_DIR/memory/cpu-cache.md"
  local tlb="$REF_DIR/memory/cpu-tlb.md"
  local numa="$REF_DIR/memory/numa.md"
  local segmented="$REF_DIR/memory/segmented.md"

  local file_dram="$REF_DIR/memory/dram.md"

  # memory
  alias sp-virtual-memory="vim -p ${virtual_memory} ${tlb} ${io_mmu}"
  alias sp-mmu="sp-virtual-memory"
  alias sp-io-mmu="sp-virtual-memory"

  alias sp-segmented-memory="vim -p ${segmented}"
  alias sp-real-mode="sp-segmented-memory"
  alias sp-protected-mode="sp-segmented-memory"

  alias sp-memory="vim -p $REF_DIR/memory/*"

  alias sp-cache="vim -p ${cpu_cache} ${tlb} ${numa}"
  alias sp-cpu-cache="sp-cache"
  alias sp-tlb="vim -p ${tlb} ${cpu_cache} ${numa}"
  alias sp-numa="vim -p ${numa} ${tlb} ${cpu_cache}"
  alias sp-dram="vim -p ${file_dram}"
}

sp_memory_alias

function sp_hardware_alias() {
  local chipset="$REF_DIR/chipset.md"

  # hardware
  alias sp-northbridge="vim $REF_DIR/northbridge.md" # TODO
  alias sp-southbridge="vim $REF_DIR/southbridge.md" # TODO
  alias sp-overclock="vim $REF_DIR/overclock.mkd"
  alias sp-chipset="vim ${chipset}"
}

sp_hardware_alias


function sp_crypto(){
  local cipher_mode="$REF_DIR/cipher-mode.md"
  local file_hmac="$REF_DIR/hmac.md"
  local file_elliptic_curve="$REF_DIR/elliptic-curve.md"

  alias sp-cipher-mode="vim ${cipher_mode}"
  alias sp-cipher-block-mode="vim ${cipher_mode}"
  alias sp-ecb="sp-cipher-mode"
  alias sp-cbc="sp-cipher-mode"
  alias sp-ctr="sp-cipher-mode"
  alias sp-ecc="vim -p ${file_elliptic_curve}"
  alias sp-elliptic-curve="sp-ecc"


  alias sp-hmac="vim -p ${file_hmac}"
}

sp_crypto

file_frequency="$REF_DIR/frequency.md" # TODO
file_waveform="$REF_DIR/waveform.md"
file_dsp="$REF_DIR/dsp.md"
#circuits
function sp_circuts_alias() {
  local fpga="$REF_DIR/fpga.md"
  local asic="$REF_DIR/asic.md"

  local soc="$REF_DIR/soc.md"
  local integrated_circuit="$REF_DIR/integrated-circuit.md" #TODO

  local pcb="$REF_DIR/printed-circuit-board.md" #TODO
  local breadboard="$REF_DIR/breadboard.md" #TODO

  local oscillator="$REF_DIR/crystal_oscillator.md" #TODO
  local transistor="$REF_DIR/transistor.md" #TODO
  local vacuum_tube="$REF_DIR/vacuum-tube.md"
  local logic_gate="$REF_DIR/logic-gate.md" #TODO

  local electricity="$REF_DIR/electricity.md" #TODO

  local oscilloscopes="$REF_DIR/oscilloscopes.md" #TODO

  local conductor=""
  local semiconductor=""
  local insulator=""


  alias sp-fpga="vim -p ${fpga} ${asic}"
  alias sp-asic="vim -p ${asic} ${fpga}"

  alias sp-soc="vim -p ${soc} ${integrated_circuit}"
  alias sp-integrated-circuit="vim -p ${integrated_circuit} ${soc}"

  alias sp-pcb="vim -p ${pcb} ${breadboard}"
  alias sp-breadboard="vim -p ${breadboard} ${pcb}"

  alias sp-crystal-oscillator="vim -p ${oscillator}"
  alias sp-transistor="vim -p ${transistor} ${vacuum_tube}"
  alias sp-vacuum-tube="vim -p ${vacuum_tube} ${transistor} "
  alias sp-logic-gate="vim -p ${logic_gate}"

  alias sp-oscilloscopes="vim -p ${oscilloscopes}"

  alias sp-waveform="vim -p ${file_waveform}"
  alias sp-electricity="vim -p ${electricity} ${file_waveform}"
  alias sp-ac="sp-electricity"
  alias sp-dc="sp-electricity"
  alias sp-current-electricity="sp-electricity"
  alias sp-ampere="sp-electricity"
  alias sp-potential-electricity="sp-electricity"
  alias sp-voltage="sp-electricity"
  alias sp-multimeter="sp-electricity"
  alias sp-resistance-electricity="sp-electricity"
  alias sp-ohm="sp-electricity"

}

sp_circuts_alias

# misc
alias sp-work="vim $REF_DIR/work.md"
alias sp-dropbox="cd $REF_DIR"
alias sp-ref="cd $DROPBOX_LINUX/"
alias sp-win="vim $REF_DIR/win.md"
alias sp-cygwin="vim $REF_DIR/cygwin.md"
alias sp-arch="vim $REF_DIR/arch.md"
alias sp-cyckel="vim $REF_DIR/cyckel.md"
alias sp-duffs-device="vim $REF_DIR/duffs-device.md"
alias sp-glossary="vim $REF_DIR/glossary.md"
alias sp-tlv="vim $REF_DIR/tlv.md"
alias sp-audiobook="vim $REF_DIR/audiobook.md"
alias sp-backup="vim $REF_DIR/backup.md"
alias sp-spell="vim $REF_DIR/spell.md"
alias sp-pdf="vim $REF_DIR/pdf.md"

alias sp-radar="vim $REF_DIR/radar.md"
alias sp-sonar="sp-radar"

alias sp-visual="vim $REF_DIR/image-visual.md"

alias sp-mri-scan="vim $REF_DIR/medical.md"
alias sp-ct-scan="sp-mri"
alias sp-cat-scan="sp-mri"

#
alias sp-stocks="vim $REF_DIR/stocks.md"
alias sp-bank="sp-stocks"
alias sp-finance="sp-stocks"

# computer science
alias sp-bnf="vim $REF_DIR/bnf.md"
alias sp-floating-point="vim $REF_DIR/floating-point.md" #TODO
alias sp-static-dynamic-typing="vim $REF_DIR/static-dynamic-typing.md"
alias sp-formal-verification="vim $REF_DIR/formal-verification.md" #TODO
alias sp-crdt="vim $REF_DIR/crdt.md"       #TODO
alias sp-turing-complete="vim $REF_DIR/turing-complete.md"       #TODO
alias sp-lambda-calculus="vim $REF_DIR/lambda-calc.md"       #TODO
alias sp-churn="vim $REF_DIR/churn.md"
alias sp-polish-notation="vim $REF_DIR/polish-notation.md"

alias sp-big-o="vim $REF_DIR/big-o.md"      #TODO
alias sp-np-problem="vim $REF_DIR/np-problem.md"      #TODO
alias sp-bitwise="vim -p $REF_DIR/bitwise.md ${file_waveform} ${file_frequency}"
alias sp-notation="sp-bitwise"
alias sp-symbol="sp-bitwise"
alias sp-math-notation="sp-bitwise"
alias sp-set-theory="sp-bitwise"

alias sp-order-of-magnitude="vim $REF_DIR/order-of-magnitude.md"
alias sp-rsa="vim $REF_DIR/rsa.md"

function sp_complexity() {
  local exp="$REF_DIR/exponential-growth.md"
  local fact="$REF_DIR/factorial.md"
  local polyn="$REF_DIR/polynomial.md"

  alias sp-math="vim -p $REF_DIR/math_notes.md ${exp} ${fact} ${polyn}"
  alias sp-math-square="sp-math"

  alias sp-exponential-growth="vim -p ${exp} ${fact} ${polyn}"
  alias sp-factorial="vim -p ${fact} ${exp} ${polyn}"
  alias sp-pow="vim $REF_DIR/pow.md"
  alias sp-polynomial="vim -p ${polyn} ${exp} ${fact}"
  alias sp-computational-complexity="vim -p $REF_DIR/computational-complexity.md"
}
sp_complexity

#
function sp_problem_solving(){
  local dyn_p="$REF_DIR/dynamic_programming.md"
  local div_c="$REF_DIR/divide_and_conquer.md"
  alias sp-dynamic-programming="vim -p ${dyn_p} ${div_c}"
  alias sp-divide-and-conquer="vim -p ${div_c} ${dyn_p}"

  alias sp-competitive-prog="vim $REF_DIR/competitive-prog"
}
sp_problem_solving

#jargon
alias sp-serverless="vim $REF_DIR/serverless.md"


# editor
alias sp-eclipse="vim $REF_DIR/eclipse.txt"
alias sp-vim="vim $DROPBOX_LINUX/vim/vim.md"
alias sp-visual-studio="vim $REF_DIR/visual-studio.md"
alias sp-vim-cpp="vim $DROPBOX_LINUX/vim/cpp.md"
alias sp-vim-jump="vim $DROPBOX_LINUX/vim/jump.md"
alias sp-vim-extra="vim $DROPBOX_LINUX/vim/extra.md"
alias sp-rtag="vim $DROPBOX_LINUX/vim/rtag.md"

# language
alias sp-bash="vim $REF_DIR/linux/bash.md"
alias sp-vimscript="vim $REF_DIR/vimscript.md"

# other
alias sp-tls="vim $REF_DIR/tls2.md"
alias sp-bitcoin="vim $REF_DIR/bitcoin.md"    #TODO
alias sp-markdown="vim $REF_DIR/linux/markdown.md"
alias sp-latex="vim $REF_DIR/linux/latex.md"
alias sp-character="vim -p $REF_DIR/character/*.txt"
alias sp-utf="vim $REF_DIR/character/utf.md" #TODO
alias sp-firefox="vim $REF_DIR/firefox.md"
alias sp-chrome="vim $REF_DIR/chrome.md"
alias sp-sybil-attack="vim $REF_DIR/sybil-attack.md" #TODO
alias sp-byzantine-generals-problem="vim $REF_DIR/byzantine-generals-problem.md" #TODO
alias sp-certificate-pinning="vim $REF_DIR/certificate_pinning.md"

#
alias sp-time="vim $REF_DIR/utc-time.md"
alias sp-utc-time="sp-time"
alias sp-date="sp-time"

# python
alias sp-python="vim $REF_DIR/python.md"

# cpp
CPP_ROOT="$DROPBOX/c"
CPP_STUB="$CPP_ROOT/stub"
CPP_EXAMPLE_MAKEFILE=$CPP_ROOT/Makefile
CPP_EXAMPLE_TEST_MAKEFILE=$CPP_ROOT/Makefile_test


alias sp-cpp="cd $CPP_ROOT"
alias sp-make="vim $CPP_ROOT/make.md"
alias sp-cmake="vim $CPP_ROOT/cmake.md"
alias cpp-include="vim $CPP_ROOT/cinclude.md"
alias cpp-volatile="vim $CPP_ROOT/volatile.md"
alias cpp-concurrency="vim $CPP_ROOT/concurrency.md"
alias sp-c="vim $CPP_ROOT/c.md"
alias cpp-gcc="vim $CPP_ROOT/gcc.md"
alias cpp-make="vim -p $CPP_EXAMPLE_MAKEFILE $CPP_EXAMPLE_TEST_MAKEFILE"
alias cpp-elf="vim $CPP_ROOT/elf.md"
alias cpp-printf="vim $CPP_ROOT/printf.md"
alias cpp-carray="vim $CPP_ROOT/carray.md"
alias cpp-pimpl="vim $CPP_ROOT/pimpl.md"
alias cpp-alignment="vim $CPP_ROOT/alignment.md"
alias sp-pkg-config="vim $CPP_ROOT/pkg-config.md"   #TODO
alias cpp-linker="vim $CPP_ROOT/linker-debug.md"
alias cpp-lambda="vim $CPP_ROOT/lambda.md"
alias cpp-aliasing="vim $CPP_ROOT/aliasing.md" #TODO
alias cpp-timer="vim $CPP_ROOT/cpp-timer.md"
alias cpp-odr="vim $CPP_ROOT/cpp-odr.md" #TODO
alias cpp-hash="vim $CPP_ROOT/cpp-hash.md"
alias cpp-hex="vim $REF_DIR/util.md"
alias sp-musl="vim $CPP_ROOT/musl.md"

alias c-make="vim -p $CPP_STUB/c-Makefile"

# debug
function sp_debug(){
  local cpu="$DROPBOX_LINUX/debug/cpu.md"
  local htop="$DROPBOX_LINUX/debug/htop.md"

  alias sp-debug="cd $REF_DIR/linux/debug"
  alias sp-gdb="vim $DROPBOX_LINUX/debug/gdb.md"
  alias sp-afl="vim $DROPBOX_LINUX/afl.md"
  alias sp-perf="vim $DROPBOX_LINUX/debug/perf.md"
  alias sp-ltrace="vim $DROPBOX_LINUX/debug/ltrace.md"
  alias sp-strace="vim $REF_DIR/linux/debug/strace.md"
  alias sp-tcpdump="vim $REF_DIR/linux/debug/tcpdump.md"
  alias sp-debug-c="vim $DROPBOX_LINUX/debug/cpp-debug.md"
  alias sp-debug-cache="vim $DROPBOX_LINUX/debug/cache.md"
  alias sp-debug-hardware="vim $DROPBOX_LINUX/debug/hardware.md"
  alias sp-debug-io="vim $DROPBOX_LINUX/debug/io.md"
  alias sp-debug-cpu="vim -p ${cpu} ${htop}"
  alias sp-htop="vim -p ${htop} ${cpu}"
  alias sp-debug-network="vim $DROPBOX_LINUX/debug/network.md"
  alias sp-debug-network-filter="vim $DROPBOX_LINUX/debug/network-filter.md"
  alias sp-debug-power="vim $DROPBOX_LINUX/debug/power.md"
  alias sp-limits="vim $DROPBOX_LINUX/debug/limits.md"
}
sp_debug

# Axis
alias sp-axis-audiocontrol="vim $DROPBOX_AXIS/audiocontrol.md"
alias sp-axis-monolith="vim $DROPBOX_AXIS/monolith.md"
alias sp-iobox="vim $DROPBOX_AXIS/iobox.md"
alias sp-axis-iobox="sp-iobox"
alias sp-axis-image2d="vim $DROPBOX_AXIS/image2d.md"
alias sp-axis-parhandle="vim $DROPBOX_AXIS/parhandle.md"
alias sp-axis="vim -p $DROPBOX_AXIS/env.md $DROPBOX_AXIS/axis.md"
alias sp-gstreamer="vim -p $DROPBOX_AXIS/gstreamer.md"

alias sp-axis-yocto="vim $DROPBOX_AXIS/yocto/yocto.md"
alias sp-axis-bitbake="vim $DROPBOX_AXIS/yocto/bitbake.md"
alias sp-bitbake="vim $REF_DIR/bitbake.md"
alias sp-glib="vim $DROPBOX_AXIS/glib.md"
alias sp-kernel-crash="vim $DROPBOX_AXIS/kernel-crash.md"
alias sp-env="vim $DROPBOX_AXIS/env.md"

# Linux utils
alias sp-dd="vim $DROPBOX_LINUX/dd.md"
alias sp-mkdir="vim $REF_DIR/mkdir.md"
alias sp-sed="vim $DROPBOX_LINUX/sed.md"
alias sp-xargs="vim $DROPBOX_LINUX/xargs.md"
alias sp-tr="vim $DROPBOX_LINUX/tr.md"
alias sp-ack="vim $DROPBOX_LINUX/ack.md"
alias sp-ag="vim $DROPBOX_LINUX/ag.md"
alias sp-w3m="vim $DROPBOX_LINUX/w3m.txt"
alias sp-grep="vim $DROPBOX_LINUX/grep.md"
alias sp-awk="vim $DROPBOX_LINUX/awk.md"
alias sp-chmod="vim $DROPBOX_LINUX/chmod.md"
alias sp-locale="vim $REF_DIR/linux/locale.md"
alias sp-mutt="vim $DROPBOX_LINUX/mutt.txt"
alias sp-pipe="vim $REF_DIR/linux/pipe.txt"
alias sp-tmux="vim $DROPBOX_LINUX/tmux.txt"
alias sp-mount="vim $REF_DIR/linux/mount.txt"
alias sp-xclip="vim $DROPBOX_LINUX/xclip.txt"
alias sp-openssl="vim $REF_DIR/sec/openssl.md"
alias sp-package="vim $DROPBOX_LINUX/install.md"
alias sp-apt="sp-package"
alias sp-tar="vim $DROPBOX_LINUX/compression.md"
alias sp-uname="vim $DROPBOX_LINUX/uname.md"

alias sp-ssh="vim -p $DROPBOX_LINUX/ssh.md $REF_DIR/ssh_tunnel.md"
alias sp-ssh-tunnel="vim -p $REF_DIR/ssh_tunnel.md $DROPBOX_LINUX/ssh.md"
alias sp-tunnel="sp-ssh-tunnel"

alias sp-nice="vim $DROPBOX_LINUX/nice.md"
alias sp-scheduler="sp-nice"
alias sp-ar="vim $DROPBOX_LINUX/ar.md"
alias sp-gnu-parallel="vim $DROPBOX_LINUX/gnu-parallel.md"
alias sp-netcat="vim $DROPBOX_LINUX/netcat.md"
alias sp-term="vim $DROPBOX_LINUX/term.md"
alias sp-cp="vim $DROPBOX_LINUX/cp.md"
alias sp-scp="vim $DROPBOX_LINUX/scp.md"
alias sp-git="vim $DROPBOX_LINUX/git.md"
alias sp-jobs="vim $DROPBOX_LINUX/jobs.md"
alias sp-gpg="vim $REF_DIR/gpg.md"
alias sp-pgp="sp-gpg"
alias sp-hexdump="vim $REF_DIR/hexdump.md"
alias sp-sudo="vim $REF_DIR/sudo.md"
alias sp-su="vim $REF_DIR/su.md"
alias sp-pass="vim $REF_DIR/pass.md"
alias sp-getopt="vim $REF_DIR/getopt.md"
alias sp-ffmpeg="vim $REF_DIR/ffmpeg.md"
alias sp-nfs="vim $REF_DIR/nfs.md"
alias sp-fstab="vim $REF_DIR/fstab.md"
alias sp-group="vim $REF_DIR/etc-group.md"
alias sp-etc-group="sp-group"

# linux
alias sp-linux="cd $DROPBOX_LINUX"
alias sp-i3wm="vim $REF_DIR/i3wm.md"
alias sp-cgroups="vim $REF_DIR/cgroups.md"      #TODO
alias sp-mutex="vim $DROPBOX_LINUX/mutex.md"    #TODO
alias sp-signal="vim $DROPBOX_LINUX/signal.md"
alias sp-systemd="vim $DROPBOX_LINUX/systemd.md"
alias sp-journalctl="vim $DROPBOX_LINUX/journalctl.md"
alias sp-load-average="vim $DROPBOX_LINUX/load-average.md"    #TODO
alias sp-context-switch="vim $DROPBOX_LINUX/context-switch.md"    #TODO
alias sp-linux-directory-structure="vim $DROPBOX_LINUX/directory-structure.md"
alias sp-random="vim $DROPBOX_LINUX/random.md"
alias sp-tty="sp-term"
alias sp-write-to-file="vim $DROPBOX_LINUX/write-to-file.md"
alias sp-pacman="vim $DROPBOX_LINUX/pacman.md"
alias sp-dbus="vim $DROPBOX_LINUX/dbus.md"
alias sp-grub="vim -p $DROPBOX_LINUX/grub.md $DROPBOX_LINUX/partition-fdisk.txt $DROPBOX_LINUX/partitioning.txt"

local file_sound="$REF_DIR/sound.md"
local file_audio="$REF_DIR/audio.md"
local file_pcm="$REF_DIR/pulse_code_modulation.md"

# linux dev
function sp_linux_dev_alias() {
  local file_linux_dev="$REF_DIR/linux-dev.md"
  local file_linux_dev_init="$REF_DIR/linux-dev-init-script.md"
  local file_linux_dev_char="$REF_DIR/linux-dev-char-dev.md"

  local linux_dev_graphic="$REF_DIR/linux-dev-graphic.md"

  local file_linux_usb="$REF_DIR/linux-usb.md"
  local file_linux_pci="$REF_DIR/linux-pci.md"
  local file_linux_uart="$REF_DIR/linux-uart.md"
  local file_linux_i2c="$REF_DIR/i2c.md"
  local file_linux_gpio="$REF_DIR/linux-gpio.md"
  local file_linux_acpi="$REF_DIR/linux-acpi.md"

  local file_linux_irq="$REF_DIR/linux-irq.md"
  local file_linux_apic="$REF_DIR/linux-apic.md"
  local file_linux_exception="$REF_DIR/linux-exception.md"

  local file_linux_device_tree="$REF_DIR/linux-device-tree.md"

  local file_serial_communication="$REF_DIR/serial-communication.md"

  local file_multiplex="$REF_DIR/multiplex-transmission.md" # TODO


  local file_pulseaudio="$REF_DIR/linux-pulseaudio.md"
  local file_alsa="$REF_DIR/linux-alsa.md"

  alias sp-linux-dev="vim -p $file_linux_dev $file_linux_dev_init $file_linux_dev_char $linux_dev_graphic"
  alias sp-linux-dev-init="vim $file_linux_dev_init"
  alias sp-linux-dev-char="vim $file_linux_dev_char"
  alias sp-linux-dev-grapic="vim $linux_dev_graphic"
  alias sp-vulkan="vim -p $REF_DIR/vulkan.md $linux_dev_graphic"

  alias sp-linux-usb="vim $file_linux_usb"
  alias sp-linux-pci="vim $file_linux_pci"
  alias sp-linux-uart="vim -p $file_linux_uart $file_serial_communication $file_baud_rate"
  alias sp-linux-i2c="vim -p $file_linux_i2c $file_serial_communication"
  alias sp-linux-gpio="vim $file_linux_gpio"
  alias sp-linux-acpi="vim $file_linux_acpi"

  alias sp-linux-irq="vim -p $file_linux_irq $file_linux_apic $file_linux_exception"
  alias sp-linux-apic="vim -p $file_linux_apic $file_linux_irq"
  alias sp-linux-exception="vim -p $file_linux_exception $file_linux_irq"

  alias sp-linux-device-tree="vim -p $file_linux_device_tree"

  alias sp-serial-communication="vim -p $file_serial_communication"
  alias sp-parallel-communication="sp-serial-communication"

  alias sp-simplex="sp-duplex"
  alias sp-full-duplex="sp-duplex"

  alias sp-multiplex="vim -p $file_multiplex"
  alias sp-time-division-multiplexing="sp-multiplex"
  alias sp-frequency-division-multiplexing="sp-multiplex"
  alias sp-frequency="vim -p $file_frequency"
  alias sp-hertz="sp-frequency"

  alias sp-alsa="vim -p ${file_alsa} ${file_pulseaudio}"
  alias sp-pulseaudio="vim -p ${file_pulseaudio} ${file_alsa}"


  #TODO insulators, conductors, semiconductors
  # realyas..

  alias sp-firmware="vim -p $REF_DIR/firmware.md"

}
sp_linux_dev_alias

#fs
alias sp-ssd="vim $REF_DIR/fs/ssd.md"

# linux syscall
LINUX_SYSCALL_ROOT=$DROPBOX_LINUX/syscall
alias sp-syscall-mlock="vim $LINUX_SYSCALL_ROOT/mlock.md"   #TODO
alias sp-syscall-readv_writev="vim $LINUX_SYSCALL_ROOT/readv_writev.md"
alias sp-syscall-rcu="vim $LINUX_SYSCALL_ROOT/rcu.md"    #TODO
alias sp-syscall-membarrier="vim $LINUX_SYSCALL_ROOT/membarrier.md"
alias sp-syscall-futex="vim $LINUX_SYSCALL_ROOT/futex.md"
alias sp-syscall-pipe="vim $LINUX_SYSCALL_ROOT/pipe.md"
alias sp-syscall-epoll="vim $LINUX_SYSCALL_ROOT/epoll.md"

file_baud_rate="$REF_DIR/baude-rate.md"
function sp_network() {
  local tcp="$DROPBOX_NETWORK/tcp.md"
  local file_udp="$DROPBOX_NETWORK/udp.md"
  local file_duplex="$REF_DIR/duplex-transmission.md"

  local file_pam="$DROPBOX_NETWORK/pulse_amplitude_modulation.md"
  local file_pwm="$REF_DIR/pulse_width_modulation.md"
  local file_modulation="$REF_DIR/digital_modulation.md"

  local digital_communication="$REF_DIR/digitial-communication.md"
  local file_band="$REF_DIR/band.md"

  local file_csma="$REF_DIR/csma-cd.md"

  local file_mdi="$REF_DIR/medium_dependent_interface.md"

  local net_layer="$DROPBOX_NETWORK/network-layer.md"
  local net_layer_ethernet="$DROPBOX_NETWORK/ethernet.md ${file_duplex} ${file_pam} ${file_mdi} ${file_csma}"
  local file_power_over_ethernet="$DROPBOX_NETWORK/poe.md"

  local file_bandwidth="$DROPBOX_NETWORK/bandwidth.md"

  local file_ipv6="$DROPBOX_LINUX/ip.md"
  local file_link_local="$DROPBOX_NETWORK/link-local.md"

  local file_nat="$DROPBOX_NETWORK/nat.md"

  # networking
  alias sp-network="vim $DROPBOX_NETWORK/linux.md"
  alias sp-network-dhcp="vim $DROPBOX_NETWORK/dhcp.md"
  alias sp-dhcp="sp-network-dhcp"
  alias sp-openvpn="vim $DROPBOX_NETWORK/openvpn.md"
  alias sp-dns="vim $DROPBOX_NETWORK/dns.md"    #TODO
  alias sp-iptables="vim $DROPBOX_NETWORK/iptables.md"    #TODO
  alias sp-hole-punch="vim $DROPBOX_NETWORK/hole-punch.md"    #TODO

  alias sp-duplex="vim -p ${file_duplex}"
  alias sp-network-layer="vim -p ${net_layer} ${net_layer_ethernet}"
  alias sp-link-layer-discovery-protocol="sp-network-layer"
  alias sp-lldp="sp-link-layer-discovery-protocol"
  alias sp-ethernet="vim -p ${net_layer_ethernet}"
  alias sp-poe="vim -p ${file_power_over_ethernet}"
  alias sp-osi="sp-network-layer"
  alias sp-network-tcp="vim ${tcp}"
  alias sp-network-udp="vim ${file_udp}"

  alias sp-network-csma="vim -p ${file_csma}"

  # Analog to Digital
  alias sp-pam="vim -p ${file_pam} ${file_pcm} ${file_pwm} ${file_modulation}"
  alias sp-pcm="vim -p ${file_pcm} ${file_pam} ${file_pwm} ${file_modulation}"
  alias sp-pwm="vim -p ${file_pwm} ${file_pcm} ${file_pam} ${file_modulation}"
  alias sp-modulation="vim -p ${file_modulation} ${file_pam} ${file_pcm} ${file_pwm} ${file_band} ${file_waveform}"
  alias sp-baud="vim -p ${file_baud_rate} ${file_pam}"

  alias sp-bandwidth="vim -p ${file_bandwidth} ${file_frequency}"
  alias sp-digital-communication="vim -p $digital_communication"
  alias sp-broadband="vim -p ${file_band} ${file_bandwidth} ${file_frequency}"
  alias sp-baseband="sp-broadband"
  alias sp-passband="sp-broadband"
  alias sp-band="sp-broadband"

  alias sp-ip="vim -p ${file_ipv6}"
  alias sp-link-local="vim -p ${file_link_local} ${file_ipv6}"

  alias sp-nat="vim -p ${file_nat}"

  #audio
  alias sp-audio="vim -p ${file_audio} ${file_sound} $REF_DIR/audio-digital.md $REF_DIR/audio-digital-sync.md ${file_pcm}"
  alias sp-sound="vim -p ${file_sound} ${file_audio} $REF_DIR/audio-digital.md $REF_DIR/audio-digital-sync.md ${file_pcm}"
  alias sp-dsp="vim -p ${file_dsp} ${file_waveform} ${file_pcm}"
}

sp_network

#concurrency
alias sp-numa="vim $DROPBOX_LINUX/numa.md"    #TODO
alias sp-sc="vim $DROPBOX_LINUX/sequential_consistency.md"
alias sp-oOo="vim $REF_DIR/1out-of-order.md"
alias sp-concurrency-jvm="vim $REF_DIR/concurrency-jvm.txt"
alias sp-concurrency="vim $DROPBOX/parallelism/general.md"
alias sp-concurrent-design="vim $REF_DIR/concurrent-design.txt"
alias sp-MESI="vim $REF_DIR/MESI.txt"    #TODO
alias sp-serializability-linearizability="vim $REF_DIR/concurrency/serializability-linearizability.md" #TODO
alias sp-linearizability-serializability="sp-serializability-linearizability"

# type-theory
alias sp-type-theory="vim -p $REF_DIR/*type*.txt $REF_DIR/variance.txt"   #TODO
alias sp-sum-type="vim $REF_DIR/sum-type.md"
alias sp-proposition-as-types="vim $REF_DIR/proposition-as-types.md"
alias sp-homotopy-type-theory="vim $REF_DIR/homotopy-type-theory.md"
alias sp-set-theory="vim $REF_DIR/set-theory.md"
alias sp-y-combinator="vim $REF_DIR/y-combinator.md"

sputil_root="$HOME/development/sputil"
sputil_util="$sputil_root/src/util"
sputil_problem="$sputil_root/src/problem"
sputil_np="$sputil_root/src/np"
function sp_open_sputil(){
  local file="$1"
  if [ ! -e $file ]; then
    echo "file: '${file}' does not exist"
    return 1
  fi

  if [ ! -e $sputil_root ]; then
    echo "root: '${sputil_root}' does not exist"
    return 1
  fi
  local old="$OLDPWD"
  cd "$sputil_root"
  vim $file
  cd -

  OLDPWD="$old"
}

function sp_repo_list() {
  local the_root="${1}"
  local prefix="${2}"
  if [ -e "${the_root}" ]; then
    for f in "$the_root"/*.h
    do
      local file=$(basename $f)
      alias "sp-${prefix}-${file}"="sp_open_sputil ${the_root}/${file}"
    done
  fi
}

#algorithms
function sp_algorithms(){
  alias sp-graph="vim $REF_DIR/graph.md"
  alias sp-levenshtein="vim $REF_DIR/levenshtein.md"

  if [ -e "${sputil_root}" ]; then
    alias sp-permutations="sp_open_sputil $sputil_util/permutation.h"
    alias sp-combinations="sp_open_sputil $sputil_util/combinations.h"
    alias sp-options="sp_open_sputil $sputil_util/options.h"
  fi

  sp_repo_list "${sputil_problem}" "problem"
  sp_repo_list "${sputil_np}" "np"

}
sp_algorithms

function sp_sort(){
  alias sp-sort-selection-sort="vim $REF_DIR/sort/selection-sort.md"
}
sp_sort

# tree
function sp_datastructure(){
  local DATA_STRUCTURE_ROOT="$REF_DIR/data-structure"
  local file_fisher_yates="$DATA_STRUCTURE_ROOT/fisher-yates.md"

  alias sp-datastructure="cd $DATA_STRUCTURE_ROOT"
  alias sp-tree-merkle-tree="vim $DATA_STRUCTURE_ROOT/tree-merkle-tree.md"   #TODO
  alias sp-tree-avl="vim $DATA_STRUCTURE_ROOT/tree-avl.md"   #TODO
  alias sp-tree-rb="vim $DATA_STRUCTURE_ROOT/tree-rb.md"
  alias sp-tree-heap="vim $DATA_STRUCTURE_ROOT/tree-bheap.md"
  alias sp-tree-bst="vim $DATA_STRUCTURE_ROOT/tree-bst.md"
  alias sp-tree-skip-list="vim $DATA_STRUCTURE_ROOT/tree-skip-list.md"
  alias sp-tree-btree="vim $DATA_STRUCTURE_ROOT/tree-btree.md"   #TODO
  alias sp-tree-lsm="vim $DATA_STRUCTURE_ROOT/tree-lsm.md"
  alias sp-tree-trie="vim $DATA_STRUCTURE_ROOT/tree-trie.md"
  alias sp-tree-radix-tree="vim $DATA_STRUCTURE_ROOT/tree-trie.md"
  alias sp-tree-hat-trie="vim $DATA_STRUCTURE_ROOT/tree-hat-trie.md"
  alias sp-tree-splay="vim $DATA_STRUCTURE_ROOT/tree-splay.md" #TODO
  alias sp-bst="vim $DATA_STRUCTURE_ROOT/bst.md"

  alias sp-fisher-yates="vim -p ${file_fisher_yates}"
  alias sp-shuffle="vim -p ${file_fisher_yates}"

  # data structures
  alias sp-bloom-filter="vim $DATA_STRUCTURE_ROOT/bloom-filter.md"
  alias sp-monad="vim $DATA_STRUCTURE_ROOT/monad.txt" #TODO
  alias sp-hashmap="vim $DATA_STRUCTURE_ROOT/hashmap.md"
  alias sp-hash="sp-hashmap"
  alias sp-crypto-hash="vim $DATA_STRUCTURE_ROOT/crypto-hash.md"
  alias sp-sha="sp-crypto-hash"
  alias sp-cqrs="vim -p $DATA_STRUCTURE_ROOT/cqrs.md"
}
sp_datastructure

# notes
function sp_notes(){
  local file_cookie="$REF_DIR/cookie.md"
  local file_http="$REF_DIR/http.md"

  alias sp-cookie="vim ${file_cookie} ${file_http}"
  alias sp-http="vim ${file_http} ${file_cookie}"
}
sp_notes

alias sp-video="vim $REF_DIR/video-notes.md"
alias sp-cs-nots="vim $REF_DIR/cs-notes.md"
alias sp-flash-card="vim $REF_DIR/flash-card.md"
alias sp-twos-complement="vim $REF_DIR/twos-complement.md"
alias sp-propaganda="vim $REF_DIR/propaganda.md"
alias sp-vpn="vim $REF_DIR/vpn.md"

# distributed
alias sp-acid="vim $REF_DIR/acid.md"   #TODO
alias sp-cap="vim $REF_DIR/cap.md"    #TODO
alias sp-paxos="vim $REF_DIR/paxos-consensus.md"    #TODO
alias sp-raft="vim $REF_DIR/raft-consensus.md"    #TODO
alias sp-dht="vim $REF_DIR/dht.md" #TODO
alias sp-mvcc="vim $REF_DIR/mvcc.md" #TODO
alias sp-stun="vim $REF_DIR/stun.md"

# new web
alias sp-new-web="cd $DROPBOX/new-web"
alias sp-tor="vim $DROPBOX/new-web/tor.md"
alias sp-ipfs="vim $DROPBOX/new-web/ipfs.md"
alias sp-dat="vim $DROPBOX/new-web/dat.md"
alias sp-zeronet="vim $DROPBOX/new-web/zeronet.md"
alias sp-cjdns="vim $DROPBOX/new-web/cjdns.md"
alias sp-freenet="vim $DROPBOX/new-web/freenet.md"

#
alias sp-neural-network="vim $REF_DIR/neural-network.md"  #TODO
alias sp-machine-learning="vim $REF_DIR/machine-learing.md" #TODO
alias sp-bluetooth="vim $REF_DIR/bluetooth.md"

# Work
alias sp-util="vim $REF_DIR/util.md"

# Project
alias sp-proj="cd $DROPBOX/project"
alias sp-proj-malloc="vim $DROPBOX/project/malloc.md"
alias sp-proj-datastructure="vim $DROPBOX/project/datastructure.md"
alias sp-proj-vfio="vim $DROPBOX/project/vfio.md"
alias sp-proj-conway="vim $DROPBOX/project/conway.md"
alias sp-proj-consensus="vim $DROPBOX/project/consensus.md"
alias sp-proj-compiler="vim $DROPBOX/project/lang.md"
alias sp-proj-lang="sp-proj-compiler"
alias sp-proj-haskell="vim $DROPBOX/project/haskell.md"
alias sp-proj-course="vim $DROPBOX/project/course.md"
alias sp-proj-docker="vim $DROPBOX/project/docker.md"
alias sp-proj-disk-algh="vim $DROPBOX/project/disk-algh.md"
alias sp-proj-ml="vim $DROPBOX/project/ml.md"
alias sp-proj-sync="vim $DROPBOX/project/sync.md"
alias sp-proj-os="vim $DROPBOX/project/kernel.md"
alias sp-proj-kernel="sp-proj-os"

#course
alias sp-course-audio-dsp="vim $DROPBOX/course/audio-dsp.md"

# nas540
alias sp-nas="vim $REF_DIR/nas/general.txt"
alias nas540_mount="sshfs admin@nas540:/i-data/ $HOME/mount/nas540"
alias nas540_dl="cd $HOME/mount/nas540/0da29454/admin/download/Transmission/download"
alias nas540_tv="cd $HOME/mount/nas540/0da29454/video/tv"

# chromecast
function sp_chromecast(){
  # http://mkchromecast.com/
  local file="${1}"

  sp_has_feature mkchromecast
  if [ ! $? -eq 0 ]; then
    yay -S mkchromecast
  fi

#   function sp_subs(){
#     local file="$1"
#     local filename=$(basename -- "$file")
#     local extension="${filename##*.}"
#     local filename="${filename%.*}"
#
#     # TODO
#
# # ./The Night Of/The.Night.Of.S01E08.HDTV.1080p.[By ExYu-Subs]/The.Night.Of.S01E08.HDTV.1080p.[By ExYu-Subs].mkv
# # ./The Night Of/The.Night.Of.S01E08.HDTV.1080p.[By ExYu-Subs]/The.Night.Of.S01E08.HDTV.1080p.[By ExYu-Subs]-slo.srt
# #
# # ./Homeland/Homeland.S03.Season.3.Complete.720p.HDTV.x264-\[maximersk\]/Subs-EN                                                                                                [1][0.0s][]
# # sub/ subs/ Sub Subs Subs-EN
#     return 1
#   }

  if [[ "${file}" =~ ^http ]]; then
    mkchromecast --video -y "${file}"
  else

    if [ ! -e "${file}" ]; then
      echo "no file '${file}'"
      return 1
    fi

    sp_subs "${file}"
    if [ $? -eq 0 ]; then
      # mkchromecast --video -i "file.mkv" --subtitles "file.srt"
      echo ""
    else
      mkchromecast --video -i "${file}"
    fi
  fi
}

function sp_mount_fat() {
  local dev_file="$1"
  local mount_point="$2"

  if [ ! -e "${dev_file}" ]; then
    echo "not existing: '${dev_file}'"
    return 1
  fi

  if [ ! -b "${dev_file}" ]; then
    echo "not a block device: '${dev_file}'"
    return 1
  fi

  if [ ! -e "${moint_point}" ]; then
    echo "not existing: '${mount_point}'"
    return 1
  fi

  if [ ! -d "${moint_point}" ]; then
    echo "not a directory: '${mount_point}'"
    return 1
  fi

  sudo mount "$dev_file" "$mount_point" -o user,rw,umask=111,dmask=000
}


# ===============================================
# ===============================================
# =_______________COMMANDS______________________=
# ===============================================

alias hna="~/dotfiles/lib/hn/spawn.sh"

function sp_has_feature() {
  FEATURE="$1"

  which $FEATURE > /dev/null 2>&1
  WHICH_FEATURE=$?
  hash $FEATURE > /dev/null 2>&1
  HASH_FEATURE=$?

  if [ $WHICH_FEATURE -eq $HASH_FEATURE ]; then
    if [ $WHICH_FEATURE -eq 0 ]; then
      return 0
    fi
  fi
  return 1
}
#cygwin
# which sudo > /dev/null 2>&1
# WHICH_SUDO=$?
# hash sudo > /dev/null 2>&1
# HASH_SUDO=$?
#
# if [ $WHICH_SUDO -eq $HASH_SUDO ]; then
#   if [ ! $WHICH_SUDO -eq 0 ]; then
#     alias sudo=$HOME/dotfiles/sudo
#   fi
# fi

#git

#khal
alias sp-khal='khal calendar -a red -a personal --format="{red-bold}{start-time}{reset}-{green-bold}{end-time}{reset} {calendar-color}{title}{reset}{yellow}{repeat-symbol}{reset} [{cyan}{location}{reset}][{magenta}{calendar}{reset}]"'
alias k="sp-khal"
alias m="ms"

#mutt
alias ms="mutt -F $HOME/.mutt/user_personal"
alias mf="mutt -F $HOME/.mutt/user2_personal"
alias mw="mutt -F $HOME/.mutt/user_work"

function sp_newsbeuter() {
  which newsbeuter 2>&1 > /dev/null
  if [ $? -eq 0 ]; then
    newsbeuter
  else
    newsboat
  fi

}
alias n="sp_newsbeuter"

#force ssh to use xterm when ssh instead of tmux-colour256
alias ssh='TERM=xterm ssh '

alias sp_sync="$DOTFILES_LIB/mail_sync.sh"

alias sp-port-scan="vim $REF_DIR/port-scan.md"
function port_scan() {
  which netstat 2>&1 > /dev/null
  if [ $? -eq 0 ]; then
    # netstat -alnptu | grep -Ei 'Proto|LISTEN'
    netstat --tcp --udp --udplite --raw --listening --program --numeric
  else
    # ss --all --listen --processes --tcp --udp --raw # | grep -Ei 'Proto|LISTEN'
    # -t: --tcp
    # -u: --udp
    # -n: --numeric?
    # -a: --all
    # -p: show pid
    ss -tuna -p | grep -i 'LISTEN'
  fi
}

alias sp-space="du -hsc *"
alias sp-root="cd \`$DOTFILES_LIB/git_root.sh\`"

#tmux
# force the 256 colors compatibility
alias tmux='tmux -2'
alias sp-source='tmux source-file ~/.tmux.conf; powerline-daemon --replace'

# meta
alias sp-alias="vim $DOTFILES/extrarc && source $DOTFILES/extrarc"
alias sp-zshrc="vim -p $HOME/.zshrc $DOTFILES/extrarc $DOTFILES/workrc"
alias sp-workrc="vim -p $HOME/dotfiles/workrc && source $DOTFILES/workrc"

alias sp-vimrc="vim -p $HOME/.config/nvim/init.vim $HOME/.standardvimrc $HOME/.vim/colors/* $HOME/.vim/plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim $HOME/.vim/plugged/tabline.vim/plugin/tabline.vim $HOME/.vimrc $HOME/.vim/coc-settings.json"
# alias sp-vimrc="vim -p $HOME/.config/nvim/init.vim  $HOME/.standardvimrc $HOME/.vim/colors/* $HOME/.vim/plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim $HOME/.vim/plugged/tabline.vim/plugin/tabline.vim $HOME/.vimrc /home/spooky/.config/nvim/plugged/chromatica.nvim/syntax/*"

alias vimsession="vim -S Session.vim"


#repeats $1
alias sp_repeat="~/dotfiles/lib/repeat.sh"
# alias sp_repeat_i="~/dotfiles/lib/repeati.sh"

function mcd(){
  if [ ! -e $1 ]; then
    mkdir -p $1
  fi
  cd $1
}

SCRATCHPAD_ROOT=$HOME/scratchpad
function sp_calc(){
  if [ $# -eq 0 ]; then
    local codi_file="${SCRATCHPAD_ROOT}/calc_$(date +'%Y_%m_%d').py"
    if [ ! -e "${codi_file}" ]; then
      cp "${SCRATCHPAD_ROOT}/calc_template" "${codi_file}"
    fi
  else
    local codi_file="${1}"
  fi

  vim -p "${codi_file}" -c "
    set scrollbind
    set cursorbind
    hi ColorColumn ctermbg=NONE
    hi VertSplit ctermbg=NONE
    hi NonText ctermfg=0
    Codi python "
}

alias sp-calc="cd $SCRATCHPAD_ROOT"

# ===============================================
# ===============================================
# =____________DEVELOPMENT______________________=
# ===============================================
alias cpp_extends="$HOME/dotfiles/lib/cpp_grep_extends.sh"
alias cpp_grep="$HOME/dotfiles/lib/cpp_grep_grep.sh"
alias cpp_funcall="$HOME/dotfiles/lib/cpp_grep_function_call.sh"
alias cpp_fundeclare="$HOME/dotfiles/lib/cpp_grep_function_declare.sh"
alias cpp_conscall="$HOME/dotfiles/lib/cpp_grep_constructor_call.sh"

alias gdb=" gdb --silent"
alias sp_gdb="$HOME/dotfiles/lib/tmuxgdb/tmuxgdb.sh"
alias sp_cmake_compile_db="cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1"

alias sp_cppcheck="cppcheck --enable=all --inconclusive --std=posix ."
alias sp_valgrind="valgrind --tool=memcheck --leak-check=full --track-origins=yes "

function setup_ycm(){
  if [[ -e CMakeLists.txt ]]; then
    $HOME/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format ycm
    $HOME/sources/YCM-Generator/config_gen.py . -b cmake --verbose -e --format cc
  fi
  if [[ -e Makefile ]]; then
    $HOME/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format ycm
    $HOME/sources/YCM-Generator/config_gen.py . -b make --verbose -e --format cc
  fi
  # since it looks like they are time same file?
  cp .color_coded .clang_complete
}

function setup_meta(){
  if [ ! -e .git ]; then
    echo 'project root is required to be git:ed'
  else
    #
    if [ -e .tags ]; then
      rm .tags
    fi
    touch .tags
    ctags -R *

    # ack-grep -f --cpp > cscope.files
    # cscope -b -q -k

    gtags
    make bear

    setup_ycm
    DIRS=( "test" )
    for current in "${DIRS[@]}"; do
      if [ -e $current ]; then
        cd $current
        setup_ycm
        cd -
      fi
    done
  fi
}

function sp_setup_make_project(){
  # if clean slate
  if [ ! "$(ls -A ${PWD})" ]; then
    git init

    local test_DIR="test"
    local test_subdir_DIR="$test_DIR/subdir"
    local src_DIR="src"
    local src_subdir_DIR="$src_DIR/subdir"
    local external_DIR="external"
    local directories=($test_subdir_DIR $external_DIR $src_subdir_DIR)
    for DIR in "${directories[@]}"
    do
      if [ ! -e $DIR ]; then
        mkdir -p $DIR
      fi
      # touch $DIR/README.md
    done

    cp $CPP_EXAMPLE_MAKEFILE .
    cp $CPP_EXAMPLE_TEST_MAKEFILE $test_DIR/Makefile
    cp "$CPP_STUB/.gitignore" .
    cp "$CPP_STUB/app.h" $src_subdir_DIR
    cp "$CPP_STUB/app.cpp" $src_subdir_DIR
    cp "$CPP_STUB/main.cpp" $src_DIR
    cp "$CPP_STUB/AppTest.cpp" $test_subdir_DIR
    cp "$CPP_STUB/tests.cpp" $test_DIR
    cp "$CPP_STUB/TESTMARKER" $test_DIR
    cp $HOME/.clang-format .

    ln -s src include

    cd $external_DIR
    git submodule add https://github.com/google/googletest.git
    cd -

    git add .
    git commit -m "Initial Commit"
  fi
  setup_meta

  make -j
  make test -j
}


function sp_setup_c_make_project(){
  # TODO
  echo ""
}

function makex() {
  pathpat="(/[^/]*)+:[0-9]+"
  ccred=$(echo -e "\033[0;31m")
  ccyellow=$(echo -e "\033[0;33m")
  ccend=$(echo -e "\033[0m")

  make "$@" 2>&1 | sed -E -e "/[Ee]rror[: ]/ s%$pathpat%$ccred&$ccend%g" -e "/[Ww]arning[: ]/ s%$pathpat%$ccyellow&$ccend%g"

  return ${PIPESTATUS[0]}
}

function sp_rtags() {
  find -iname "compile_commands.json" | xargs dirname | xargs -n1 rc -J
}

function sp_perf_report(){
  perf report -n --stdio
}

function sp_perf(){
  perf record -F 990 -- $@
  # spperf_report
}

alias makex="makex | less -RiN -p error"

# watch files system for changes and reload
alias make_loop="$HOME/dotfiles/lib/entr_cpp.sh $HOME/dotfiles/lib/make_body.sh"
alias test_loop="$HOME/dotfiles/lib/entr_cpp.sh $HOME/dotfiles/lib/make_test_body.sh test ./test/thetest"
# function sp_entr(){
#   //....
#   sp_has_feature "entr"
#   if [ $? -eq 0 ]; then
#     cat $TEMP_file | entr $BODY $ARG
#   else
#     cat $TEMP_file | $HOME/dotfiles/lib/timestamp_make.sh $BODY $ARG
#   fi
#
# }
# alias cpp_change_loop="$HOME/dotfiles/lib/entr_cpp.sh "

function sp_ag() {
  ag "$1" --cpp --ignore "external"
}

function sp_cryptocurrency(){
  local COIN="$1"
  local HOURS="$2"
  local HEADER="$3"

  local CLIENT="bitcoin-chart-cli"
  sp_has_feature $CLIENT
  if [ ! $? -eq 0 ]; then
    echo "error missing: $CLIENT"
    echo "npm install $CLIENT -g"
    return 1
  fi
  local SP_TEMP="`mktemp /tmp/tmp-XXXXX`"

  local COLLECT="$CLIENT --coin $COIN --hours $HOURS --width 127 --height 32 > $SP_TEMP "
  local PRESENT="echo $COIN && cat $SP_TEMP"
  local COMMAND="$COLLECT && clear && $PRESENT && sleep 25"
  # echo $COMMAND

  sp_repeat $COMMAND

# bitcoin-chart-cli --coin BTC --hours 16 --height 65 --width 250
}

function sp_bitcoin(){
  sp_cryptocurrency "BTC" "12"
}

function sp_eth(){
  sp_cryptocurrency "ETH" "12"
}

function sp_ltc(){
  sp_cryptocurrency "LTC" "12"
}

alias sp_bitcoin_table="coinmon"
# vim: set ft=zsh:
